clear;
clc;

curr = load('../../29-ArmDataCollection/trainData/dataCur.txt');
phi = load('../../20-ParametricIdentification-7DOF/trainOutput/phi.txt');
combeta = load('convergedBetaVector104PosesHardwareTrained.txt');
betaKnown = combeta(21:48); % treating masses and CoMs as known
km = [31.4e-3, 31.4e-3, 38e-3, 38e-3, 16e-3, 16e-3, 16e-3]';
G_R = [596, 596, 625, 625, 552, 552, 552]';

torques = reshape((curr(2:end,:)*diag(km)*diag(G_R))',[],1);
k = reshape([1:13:91; 2:13:91; 3:13:91; 4:13:91], [], 1);
u = reshape([5:13:91; 6:13:91; 7:13:91; 8:13:91; 9:13:91; 10:13:91; 11:13:91; 12:13:91; 13:13:91], [], 1);
phiKnown = phi(:,k)

% Separate phi_k and phi_u out of phi_mat
for i=1:13:91
   phi_k = [phi_k  phi_mat(:,i) phi_mat(:,i+1) phi_mat(:,i+2) phi_mat(:,i+3)];
end
for i=5:13:91
   phi_u = [phi_u  phi_mat(:,i) phi_mat(:,i+1) phi_mat(:,i+2) phi_mat(:,i+3) phi_mat(:,i+4) phi_mat(:,i+5) phi_mat(:,i+6) phi_mat(:,i+7) phi_mat(:,i+8)];
end

% Subtracting known phi*beta from existing tau to get tau_prime
tau_prime = tau - phi_k*beta_k';

% Running regression on unknown betas
ridge_u = (phi_u'*phi_u);
beta_u = pinv(ridge_u)*phi_u'*tau_prime;

% Putting known and calculated beta parameters in single vector
betaVec = zeros(91,1);
for i=0:6
   betaVec(13*i+1:13*i+13) = [beta_k(4*i+1:4*i+4)'; beta_u(9*i+1:9*i+9)];
end

betaVec = betaVec';
save('betaVec.txt','betaVec','-ascii');

% ridge=(phi_mat'*phi_mat);%+(1e-5*eye(n));
% param=pinv(ridge)*phi_mat'*tau;
% % Matrix format for params 
% paramMat = [param(1:13) param(14:26) param(27:39) param(40:52) param(53:65) param(66:78) param(79:91)]
